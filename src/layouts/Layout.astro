---
import "../styles/main.scss";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { generateThemeVars, getThemeName } from "../utils/themes";

import { SITE_TITLE, SITE_DESCRIPTION } from "../config";

const {
  image,
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  includeSidebar = true,
  sideBarActiveItemID,
  ogType,
  pageType = "standard",
  withCont = true,
  currentSlug = "",
  withDiagonalLines = true,
} = Astro.props;

const { isProject, ...otherProps } = Astro.props;
const finalPageType =
  typeof pageType === "string"
    ? pageType
    : isProject === true
      ? "page"
      : "standard";

const currentPath = Astro.url.pathname;
const themeName = getThemeName(currentPath);
const themeVars = generateThemeVars(themeName);
const cssVars = Object.entries(themeVars)
  .map(([key, value]) => `${key}: ${value}`)
  .join(";");
---

<!doctype html>
<html lang="en">
  <head class="">
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body
    class=`theme-${themeName} min-h-screen bg-gradient flex flex-col bg ${withCont ? 'cont' : ''} border with-lines page-type-${finalPageType}`
    style={cssVars}
  >
    <header class="">
      {
        finalPageType === "page" ? (
          <>
            <a href="/" class="back-links mobile-only">
              ‚Üê home
            </a>
          </>
        ) : (
          <Header currentPath={currentPath} pageType={pageType} />
        )
      }
    </header>
    <main
      class=`${withDiagonalLines ? 'with-lines' : 'white-bg'} ${finalPageType === 'experiment' ? 'experiment-layout' : ''}`
    >
      <slot />
    </main>
    <footer class="bg-white border-t border-b">
      <Footer />
    </footer>
  </body>
</html>

<style is:global>
  .back-links {
    position: fixed;
    background-color: #d5f3d5;
    top: 4;
    z-index: 9;
    padding: 0.5rem 1rem;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    display: none;
  }

  @media (max-width: 768px) {
    .back-links {
      display: block;
    }
  }

  .white-bg {
    background-color: #ffffff !important;
  }

  .theme-home,
  .theme-about,
  .theme-feed,
  .theme-playground {
    transition:
      background-color var(--transition-default),
      color var(--transition-default);
  }

  .bg-gradient {
    background: linear-gradient(
      145deg,
      var(--theme-gradient-primary),
      var(--theme-gradient-secondary)
    );
  }

  .page-wrapper {
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    font-family: var(--font-sans);
    color: var(--text-primary);
    line-height: var(--line-height-normal);
  }
</style>
