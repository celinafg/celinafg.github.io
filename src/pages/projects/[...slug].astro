---
import { type CollectionEntry, getCollection } from "astro:content";
import ProjectLayout from "../../layouts/ProjectLayout.astro";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const allProjects = await getCollection("projects");

  const projects = allProjects.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));

  return projects;
}) satisfies GetStaticPaths;

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

interface Heading {
  depth: number;
  slug: string;
  text: string;
}

interface GroupedHeading extends Heading {
  subheadings: GroupedHeading[];
}

function groupHeadingsByHierarchy(headings: Heading[]): GroupedHeading[] {
  const groupedHeadings: GroupedHeading[] = [];
  let currentH2: GroupedHeading | null = null;

  for (const heading of headings) {
    if (heading.depth === 2) {
      currentH2 = { ...heading, subheadings: [] };
      groupedHeadings.push(currentH2);
    } else if (heading.depth === 3 && currentH2) {
      currentH2.subheadings.push({ ...heading, subheadings: [] });
    }
  }

  return groupedHeadings;
}

const groupedHeadings: GroupedHeading[] = groupHeadingsByHierarchy(
  headings ?? []
);
---

<ProjectLayout {...entry.data} groupedHeadings={groupedHeadings}>
  <Content />
</ProjectLayout>
